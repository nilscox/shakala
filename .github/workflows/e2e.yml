name: E2E

on:
  # push:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  packages: read

jobs:
  e2e:
    name: End-to-end tests
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:v1.27.0-focal
    timeout-minutes: 25

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      maildev:
        image: maildev/maildev

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Install node dependencies
        run: yarn install --frozen-lockfile

      - name: Install playwright dependencies
        run: yarn playwright install-deps && yarn playwright install chromium
        working-directory: packages/6-e2e

      - name: Start backend
        run: |
          yarn build
          yarn db:migrate
          node -r ./register-aliases.js ./dist/main.js &
        working-directory: packages/3-backend-infrastructure
        env:
          NODE_ENV: test
          VERSION: e2e

          API_BASE_URL: http://localhost:3000
          APP_BASE_URL: http://localhost:8080

          SESSION_SECRET: secret

          HOST: 0.0.0.0
          PORT: 3000

          DATABASE_HOST: postgres
          DATABASE_USER: user
          DATABASE_PASSWORD: password
          DATABASE_NAME: test
          DATABASE_DEBUG: false

          EMAIL_HOST: maildev
          EMAIL_PORT: 1025
          EMAIL_SECURE: false
          EMAIL_USER: hello@shakala.local
          EMAIL_PASSWORD:
          EMAIL_FROM: 'Shakala (dev)'

      - name: Start frontend
        run: |
          yarn build
          npx http-server-spa dist &
          sleep 5
        working-directory: packages/5-frontend-client
        env:
          VERSION: e2e

      - name: Wait for everything to be up
        timeout-minutes: 1
        run: |
          npx wait-on -v -l http://127.0.0.1:3000/healthcheck && echo "backend is up"
          npx wait-on -v -l http://127.0.0.1:8080 && echo "frontend is up"

      - name: Run end-to-end tests
        run: yarn e2e
        working-directory: packages/6-e2e
        env:
          NODE_ENV: test
          VERSION: e2e

          API_BASE_URL: http://localhost:3000
          APP_BASE_URL: http://localhost:8080

          SESSION_SECRET: secret

          HOST:
          PORT:

          DATABASE_HOST: postgres
          DATABASE_USER: user
          DATABASE_PASSWORD: password
          DATABASE_NAME: test
          DATABASE_DEBUG: false

          EMAIL_HOST: maildev
          EMAIL_PORT: 1025
          EMAIL_SECURE: false
          EMAIL_USER: hello@shakala.local
          EMAIL_PASSWORD:
          EMAIL_FROM: 'Shakala (e2e)'

          MAILDEV_API_HOST: maildev
          MAILDEV_API_PORT: 1080

      - uses: actions/upload-artifact@v3
        if: ${{ failure() || cancelled() }}
        with:
          name: playwright-traces
          path: test-results
